game.Players.LocalPlayer.Character["SeeMonkey"].Handle.Mesh:Destroy()
game.Players.LocalPlayer.Character["Pink Hair"].Handle.Mesh:Destroy()
game.Players.LocalPlayer.Character["Kate Hair"].Handle.Mesh:Destroy() --LavanderHair
game.Players.LocalPlayer.Character["LavanderHair"].Handle.Mesh:Destroy()
game.Players.LocalPlayer.Character["Robloxclassicred"].Handle.Mesh:Destroy()
--game.Players.LocalPlayer.Character["Surfboard"].Handle.Handle:Destroy()
game.Players.LocalPlayer.Character["VANS_Umbrella"].Handle.Mesh:Destroy()


local c = game.Players.LocalPlayer.Character
for i, v in pairs({"Right Arm", "Left Arm"}) do
    local arm = c[v]
    arm.Parent = nil
    arm.Transparency = 1
    arm.Parent = c
end

local c = game.Players.LocalPlayer.Character
for i, v in pairs({"Right Leg", "Left Leg"}) do
    local Leg = c[v]
    Leg.Parent = nil
    Leg.Transparency = 1
    Leg.Parent = c
end

local v3_net, v3_808 = Vector3.new(0, 25.1, 0), Vector3.new(8, 0, 8)
		local function getNetlessVelocity(realPartVelocity)
			local mag = realPartVelocity.Magnitude
			if mag > 1 then
				local unit = realPartVelocity.Unit
				if (unit.Y > 0.25) or (unit.Y < -0.75) then
					return unit * (25.1 / unit.Y)
				end
			end 
			return v3_net + realPartVelocity * v3_808
		end
		local simradius = "shp" --simulation radius (net bypass) method
--simulation radius (net bypass) method
--"shp" - sethiddenproperty
--"ssr" - setsimulationradius
--false - disable
local antiragdoll = true --removes hingeConstraints and ballSocketConstraints from your character
local newanimate = false --disables the animate script and enables after reanimation
local discharscripts = true --disables all localScripts parented to your character before reanimation
local R15toR6 = true --tries to convert your character to r6 if its r15
local hatcollide = true --makes hats cancollide (only method 0)
local humState16 = true --enables collisions for limbs before the humanoid dies (using hum:ChangeState)
local addtools = false --puts all tools from backpack to character and lets you hold them after reanimation
local hedafterneck = false --disable aligns for head and enable after neck is removed
local loadtime = game:GetService("Players").RespawnTime + 0.5 --anti respawn delay
local method = 0 --reanimation method
--methods:
--0 - breakJoints (takes [loadtime] seconds to laod)
--1 - limbs
--2 - limbs + anti respawn
--3 - limbs + breakJoints after [loadtime] seconds
--4 - remove humanoid + breakJoints
--5 - remove humanoid + limbs
local alignmode = 3 --AlignPosition mode
--modes:
--1 - AlignPosition rigidity enabled true
--2 - 2 AlignPositions rigidity enabled both true and false
--3 - AlignPosition rigidity enabled false

healthHide = healthHide and ((method == 0) or (method == 2) or (method == 000)) and gp(c, "Head", "BasePart")

local lp = game:GetService("Players").LocalPlayer
local rs = game:GetService("RunService")
local stepped = rs.Stepped
local heartbeat = rs.Heartbeat
local renderstepped = rs.RenderStepped
local sg = game:GetService("StarterGui")
local ws = game:GetService("Workspace")
local cf = CFrame.new
local v3 = Vector3.new
local v3_0 = v3(0, 0, 0)
local inf = math.huge

local c = lp.Character

if not (c and c.Parent) then
	return
end

c.Destroying:Connect(function()
	c = nil
end)

local function gp(parent, name, className)
	if typeof(parent) == "Instance" then
		for i, v in pairs(parent:GetChildren()) do
			if (v.Name == name) and v:IsA(className) then
				return v
			end
		end
	end
	return nil
end

local function align(Part0, Part1)
	Part0.CustomPhysicalProperties = PhysicalProperties.new(0.0001, 0.0001, 0.0001, 0.0001, 0.0001)

	local att0 = Instance.new("Attachment", Part0)
	att0.Orientation = v3_0
	att0.Position = v3_0
	att0.Name = "att0_" .. Part0.Name
	local att1 = Instance.new("Attachment", Part1)
	att1.Orientation = v3_0
	att1.Position = v3_0
	att1.Name = "att1_" .. Part1.Name

	if (alignmode == 1) or (alignmode == 2) then
		local ape = Instance.new("AlignPosition", att0)
		ape.ApplyAtCenterOfMass = false
		ape.MaxForce = inf
		ape.MaxVelocity = inf
		ape.ReactionForceEnabled = false
		ape.Responsiveness = 200
		ape.Attachment1 = att1
		ape.Attachment0 = att0
		ape.Name = "AlignPositionRtrue"
		ape.RigidityEnabled = true
	end

	if (alignmode == 2) or (alignmode == 3) then
		local apd = Instance.new("AlignPosition", att0)
		apd.ApplyAtCenterOfMass = false
		apd.MaxForce = inf
		apd.MaxVelocity = inf
		apd.ReactionForceEnabled = false
		apd.Responsiveness = 200
		apd.Attachment1 = att1
		apd.Attachment0 = att0
		apd.Name = "AlignPositionRfalse"
		apd.RigidityEnabled = false
	end

	local ao = Instance.new("AlignOrientation", att0)
	ao.MaxAngularVelocity = inf
	ao.MaxTorque = inf
	ao.PrimaryAxisOnly = false
	ao.ReactionTorqueEnabled = false
	ao.Responsiveness = 200
	ao.Attachment1 = att1
	ao.Attachment0 = att0
	ao.RigidityEnabled = false

	if type(getNetlessVelocity) == "function" then
	    local realVelocity = v3_0
        local steppedcon = stepped:Connect(function()
            Part0.Velocity = realVelocity
        end)
        local heartbeatcon = heartbeat:Connect(function()
            realVelocity = Part0.Velocity
            Part0.Velocity = getNetlessVelocity(realVelocity)
        end)
        Part0.Destroying:Connect(function()
            Part0 = nil
            steppedcon:Disconnect()
            heartbeatcon:Disconnect()
        end)
    end
end

local function respawnrequest()
	local ccfr = ws.CurrentCamera.CFrame
	local c = lp.Character
	lp.Character = nil
	lp.Character = c
	local con = nil
	con = ws.CurrentCamera.Changed:Connect(function(prop)
	    if (prop ~= "Parent") and (prop ~= "CFrame") then
	        return
	    end
	    ws.CurrentCamera.CFrame = ccfr
	    con:Disconnect()
    end)
end

local destroyhum = (method == 4) or (method == 5)
local breakjoints = (method == 0) or (method == 4)
local antirespawn = (method == 0) or (method == 2) or (method == 3)

hatcollide = hatcollide and (method == 0)

addtools = addtools and gp(lp, "Backpack", "Backpack")

local fenv = getfenv()
local shp = fenv.sethiddenproperty or fenv.set_hidden_property or fenv.set_hidden_prop or fenv.sethiddenprop
local ssr = fenv.setsimulationradius or fenv.set_simulation_radius or fenv.set_sim_radius or fenv.setsimradius or fenv.set_simulation_rad or fenv.setsimulationrad

if shp and (simradius == "shp") then
	spawn(function()
		while c and heartbeat:Wait() do
			shp(lp, "SimulationRadius", inf)
		end
	end)
elseif ssr and (simradius == "ssr") then
	spawn(function()
		while c and heartbeat:Wait() do
			ssr(inf)
		end
	end)
end

antiragdoll = antiragdoll and function(v)
	if v:IsA("HingeConstraint") or v:IsA("BallSocketConstraint") then
		v.Parent = nil
	end
end

if antiragdoll then
	for i, v in pairs(c:GetDescendants()) do
		antiragdoll(v)
	end
	c.DescendantAdded:Connect(antiragdoll)
end

if antirespawn then
	respawnrequest()
end

if method == 0 then
	wait(loadtime)
	if not c then
		return
	end
end

if discharscripts then
	for i, v in pairs(c:GetChildren()) do
		if v:IsA("LocalScript") then
			v.Disabled = true
		end
	end
elseif newanimate then
	local animate = gp(c, "Animate", "LocalScript")
	if animate and (not animate.Disabled) then
		animate.Disabled = true
	else
		newanimate = false
	end
end

if addtools then
	for i, v in pairs(addtools:GetChildren()) do
		if v:IsA("Tool") then
			v.Parent = c
		end
	end
end

pcall(function()
	settings().Physics.AllowSleep = false
	settings().Physics.PhysicsEnvironmentalThrottle = Enum.EnviromentalPhysicsThrottle.Disabled
end)

local OLDscripts = {}

for i, v in pairs(c:GetDescendants()) do
	if v.ClassName == "Script" then
		table.insert(OLDscripts, v)
	end
end

local scriptNames = {}

for i, v in pairs(c:GetDescendants()) do
	if v:IsA("BasePart") then
		local newName = tostring(i)
		local exists = true
		while exists do
			exists = false
			for i, v in pairs(OLDscripts) do
				if v.Name == newName then
					exists = true
				end
			end
			if exists then
				newName = newName .. "_"    
			end
		end
		table.insert(scriptNames, newName)
		Instance.new("Script", v).Name = newName
	end
end

c.Archivable = true
local hum = c:FindFirstChildOfClass("Humanoid")
if hum then
	for i, v in pairs(hum:GetPlayingAnimationTracks()) do
		v:Stop()
	end
end
local cl = c:Clone()
if hum and humState16 then
    hum:ChangeState(Enum.HumanoidStateType.Physics)
    if destroyhum then
        wait(1.6)
    end
end
if hum and hum.Parent and destroyhum then
    hum:Destroy()
end

if not c then
    return
end

local head = gp(c, "Head", "BasePart")
local torso = gp(c, "Torso", "BasePart") or gp(c, "UpperTorso", "BasePart")
local root = gp(c, "HumanoidRootPart", "BasePart")
if hatcollide and c:FindFirstChildOfClass("Accessory") then
    local anything = c:FindFirstChildOfClass("BodyColors") or gp(c, "Health", "Script")
    if not (torso and root and anything) then
        return
    end
    torso:Destroy()
    root:Destroy()
    if shp then
        for i,v in pairs(c:GetChildren()) do
            if v:IsA("Accessory") then
                shp(v, "BackendAccoutrementState", 0)
            end 
        end
    end
    anything:Destroy()
    if head then
       head:Destroy()
    end
end

for i, v in pairs(cl:GetDescendants()) do
	if v:IsA("BasePart") then
		v.Transparency = 1
		v.Anchored = false
	end
end

local model = Instance.new("Model", c)
model.Name = model.ClassName

model.Destroying:Connect(function()
	model = nil
end)

for i, v in pairs(c:GetChildren()) do
	if v ~= model then
		if addtools and v:IsA("Tool") then
			for i1, v1 in pairs(v:GetDescendants()) do
				if v1 and v1.Parent and v1:IsA("BasePart") then
					local bv = Instance.new("BodyVelocity", v1)
					bv.Velocity = v3_0
					bv.MaxForce = v3(1000, 1000, 1000)
					bv.P = 1250
					bv.Name = "bv_" .. v.Name
				end
			end
		end
		v.Parent = model
	end
end

if breakjoints then
	model:BreakJoints()
else
	if head and torso then
		for i, v in pairs(model:GetDescendants()) do
			if v:IsA("Weld") or v:IsA("Snap") or v:IsA("Glue") or v:IsA("Motor") or v:IsA("Motor6D") then
				local save = false
				if (v.Part0 == torso) and (v.Part1 == head) then
					save = true
				end
				if (v.Part0 == head) and (v.Part1 == torso) then
					save = true
				end
				if save then
					if hedafterneck then
						hedafterneck = v
					end
				else
					v:Destroy()
				end
			end
		end
	end
	if method == 3 then
		spawn(function()
			wait(loadtime)
			if model then
				model:BreakJoints()
			end
		end)
	end
end

cl.Parent = c
for i, v in pairs(cl:GetChildren()) do
	v.Parent = c
end
cl:Destroy()

local modelDes = {}
for i, v in pairs(model:GetDescendants()) do
	if v:IsA("BasePart") then
		i = tostring(i)
		v.Destroying:Connect(function()
			modelDes[i] = nil
		end)
		modelDes[i] = v
	end
end
local modelcolcon = nil
local function modelcolf()
	if model then
		for i, v in pairs(modelDes) do
			v.CanCollide = false
		end
	else
		modelcolcon:Disconnect()
	end
end
modelcolcon = stepped:Connect(modelcolf)
modelcolf()

for i, scr in pairs(model:GetDescendants()) do
	if (scr.ClassName == "Script") and table.find(scriptNames, scr.Name) then
		local Part0 = scr.Parent
		if Part0:IsA("BasePart") then
			for i1, scr1 in pairs(c:GetDescendants()) do
				if (scr1.ClassName == "Script") and (scr1.Name == scr.Name) and (not scr1:IsDescendantOf(model)) then
					local Part1 = scr1.Parent
					if (Part1.ClassName == Part0.ClassName) and (Part1.Name == Part0.Name) then
						align(Part0, Part1)
						break
					end
				end
			end
		end
	end
end

if (typeof(hedafterneck) == "Instance") and head then
	local aligns = {}
	local con = nil
	con = hedafterneck.Changed:Connect(function(prop)
	    if (prop == "Parent") and not hedafterneck.Parent then
	        con:Disconnect()
    		for i, v in pairs(aligns) do
    			v.Enabled = true
    		end
		end
	end)
	for i, v in pairs(head:GetDescendants()) do
		if v:IsA("AlignPosition") or v:IsA("AlignOrientation") then
			i = tostring(i)
			aligns[i] = v
			v.Destroying:Connect(function()
			    aligns[i] = nil
			end)
			v.Enabled = false
		end
	end
end

for i, v in pairs(c:GetDescendants()) do
	if v and v.Parent then
		if v.ClassName == "Script" then
			if table.find(scriptNames, v.Name) then
				v:Destroy()
			end
		elseif not v:IsDescendantOf(model) then
			if v:IsA("Decal") then
				v.Transparency = 1
			elseif v:IsA("ForceField") then
				v.Visible = false
			elseif v:IsA("Sound") then
				v.Playing = false
			elseif v:IsA("BillboardGui") or v:IsA("SurfaceGui") or v:IsA("ParticleEmitter") or v:IsA("Fire") or v:IsA("Smoke") or v:IsA("Sparkles") then
				v.Enabled = false
			end
		end
	end
end

if newanimate then
	local animate = gp(c, "Animate", "LocalScript")
	if animate then
		animate.Disabled = false
	end
end

if addtools then
	for i, v in pairs(c:GetChildren()) do
		if v:IsA("Tool") then
			v.Parent = addtools
		end
	end
end

local hum0 = model:FindFirstChildOfClass("Humanoid")
if hum0 then
    hum0.Destroying:Connect(function()
        hum0 = nil
    end)
end

local hum1 = c:FindFirstChildOfClass("Humanoid")
if hum1 then
    hum1.Destroying:Connect(function()
        hum1 = nil
    end)
end

if hum1 then
	ws.CurrentCamera.CameraSubject = hum1
	local camSubCon = nil
	local function camSubFunc()
		camSubCon:Disconnect()
		if c and hum1 then
			ws.CurrentCamera.CameraSubject = hum1
		end
	end
	camSubCon = renderstepped:Connect(camSubFunc)
	if hum0 then
		hum0.Changed:Connect(function(prop)
			if hum1 and (prop == "Jump") then
				hum1.Jump = hum0.Jump
			end
		end)
	else
		respawnrequest()
	end
end

local rb = Instance.new("BindableEvent", c)
rb.Event:Connect(function()
	rb:Destroy()
	sg:SetCore("ResetButtonCallback", true)
	if destroyhum then
		c:BreakJoints()
		return
	end
	if hum0 and (hum0.Health > 0) then
		model:BreakJoints()
		hum0.Health = 0
	end
	if antirespawn then
	    respawnrequest()
	end
end)
sg:SetCore("ResetButtonCallback", rb)

spawn(function()
	while c do
		if hum0 and hum1 then
			hum1.Jump = hum0.Jump
		end
		wait()
	end
	sg:SetCore("ResetButtonCallback", true)
end)

R15toR6 = R15toR6 and hum1 and (hum1.RigType == Enum.HumanoidRigType.R15)
if R15toR6 then
    local part = gp(c, "HumanoidRootPart", "BasePart") or gp(c, "UpperTorso", "BasePart") or gp(c, "LowerTorso", "BasePart") or gp(c, "Head", "BasePart") or c:FindFirstChildWhichIsA("BasePart")
	if part then
	    local cfr = part.CFrame
		local R6parts = { 
			head = {
				Name = "Head",
				Size = v3(2, 1, 1),
				R15 = {
					Head = 0
				}
			},
			torso = {
				Name = "Torso",
				Size = v3(2, 2, 1),
				R15 = {
					UpperTorso = 0.2,
					LowerTorso = -100
				}
			},
			root = {
				Name = "HumanoidRootPart",
				Size = v3(2, 2, 1),
				R15 = {
					HumanoidRootPart = 0
				}
			},
			leftArm = {
				Name = "Left Arm",
				Size = v3(1, 2, 1),
				R15 = {
					LeftHand = -0.73,
					LeftLowerArm = -0.2,
					LeftUpperArm = 0.4
				}
			},
			rightArm = {
				Name = "Right Arm",
				Size = v3(1, 2, 1),
				R15 = {
					RightHand = -0.73,
					RightLowerArm = -0.2,
					RightUpperArm = 0.4
				}
			},
			leftLeg = {
				Name = "Left Leg",
				Size = v3(1, 2, 1),
				R15 = {
					LeftFoot = -0.73,
					LeftLowerLeg = -0.15,
					LeftUpperLeg = 0.6
				}
			},
			rightLeg = {
				Name = "Right Leg",
				Size = v3(1, 2, 1),
				R15 = {
					RightFoot = -0.73,
					RightLowerLeg = -0.15,
					RightUpperLeg = 0.6
				}
			}
		}
		for i, v in pairs(c:GetChildren()) do
			if v:IsA("BasePart") then
				for i1, v1 in pairs(v:GetChildren()) do
					if v1:IsA("Motor6D") then
						v1.Part0 = nil
					end
				end
			end
		end
		part.Archivable = true
		for i, v in pairs(R6parts) do
			local part = part:Clone()
			part:ClearAllChildren()
			part.Name = v.Name
			part.Size = v.Size
			part.CFrame = cfr
			part.Anchored = false
			part.Transparency = 1
			part.CanCollide = false
			for i1, v1 in pairs(v.R15) do
				local R15part = gp(c, i1, "BasePart")
				local att = gp(R15part, "att1_" .. i1, "Attachment")
				if R15part then
					local weld = Instance.new("Weld", R15part)
					weld.Name = "Weld_" .. i1
					weld.Part0 = part
					weld.Part1 = R15part
					weld.C0 = cf(0, v1, 0)
					weld.C1 = cf(0, 0, 0)
					R15part.Massless = true
					R15part.Name = "R15_" .. i1
					R15part.Parent = part
					if att then
						att.Parent = part
						att.Position = v3(0, v1, 0)
					end
				end
			end
			part.Parent = c
			R6parts[i] = part
		end
		local R6joints = {
			neck = {
				Parent = Scarf,
				Name = "Neck",
				Part0 = Scarf, --R6parts.torso
				Part1 = Scarf, --R6parts.head
				C0 = cf(0, 1, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0),
				C1 = cf(0, -0.5, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
			},
			rootJoint = {
				Parent = R6parts.root,
				Name = "RootJoint" ,
				Part0 = R6parts.root,
				Part1 = R6parts.torso,
				C0 = cf(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0),
				C1 = cf(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
			},
			rightShoulder = {
				Parent = R6parts.torso,
				Name = "Right Shoulder",
				Part0 = R6parts.torso,
				Part1 = R6parts.rightArm,
				C0 = cf(1, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0),
				C1 = cf(-0.5, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
			},
			leftShoulder = {
				Parent = R6parts.torso,
				Name = "Left Shoulder",
				Part0 = R6parts.torso,
				Part1 = R6parts.leftArm,
				C0 = cf(-1, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0),
				C1 = cf(0.5, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
			},
			rightHip = {
				Parent = R6parts.torso,
				Name = "Right Hip",
				Part0 = R6parts.torso,
				Part1 = R6parts.rightLeg,
				C0 = cf(1, -1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0),
				C1 = cf(0.5, 1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
			},
			leftHip = {
				Parent = R6parts.torso,
				Name = "Left Hip" ,
				Part0 = R6parts.torso,
				Part1 = R6parts.leftLeg,
				C0 = cf(-1, -1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0),
				C1 = cf(-0.5, 1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
			}
		}
		for i, v in pairs(R6joints) do
			local joint = Instance.new("Motor6D")
			for prop, val in pairs(v) do
				joint[prop] = val
			end
			R6joints[i] = joint
		end
		hum1.RigType = Enum.HumanoidRigType.R6
		hum1.HipHeight = 0
	end
end



--find rig joints

local function fakemotor()
    return {C0=cf(), C1=cf()}
end

local torso = gp(c, "Torso", "BasePart")
local root = gp(c, "HumanoidRootPart", "BasePart")

local neck = gp(torso, "Neck", "Motor6D")
neck = neck or fakemotor()

local rootJoint = gp(root, "RootJoint", "Motor6D")
rootJoint = rootJoint or fakemotor()

local leftShoulder = gp(torso, "Left Shoulder", "Motor6D")
leftShoulder = leftShoulder or fakemotor()

local rightShoulder = gp(torso, "Right Shoulder", "Motor6D")
rightShoulder = rightShoulder or fakemotor()

local leftHip = gp(torso, "Left Hip", "Motor6D")
leftHip = leftHip or fakemotor()

local rightHip = gp(torso, "Right Hip", "Motor6D")
rightHip = rightHip or fakemotor()

--120 fps

local fps = 0
local event = Instance.new("BindableEvent", c)
event.Name = "120 fps"
local floor = math.floor
fps = 1 / fps
local tf = 0
local con = nil
con = game:GetService("RunService").RenderStepped:Connect(function(s)
	if not c then
		con:Disconnect()
		return
	end
    --tf += s
	if tf >= fps then
		for i=1, floor(tf / fps) do
			event:Fire(c)
		end
		tf = 0
	end
end)
local event = event.Event

local hedrot = v3(0, 5, 0)

local uis = game:GetService("UserInputService")
local function isPressed(key)
    return (not uis:GetFocusedTextBox()) and uis:IsKeyDown(Enum.KeyCode[key])
end

local biggesthandle = nil
for i, v in pairs(c:GetChildren()) do
    if v:IsA("Accessory") and v.Name == "VANS_Umbrella" then
        local handle = gp(v, "Handle", "BasePart")
        if biggesthandle then
            if biggesthandle.Size.Magnitude < handle.Size.Magnitude then
                biggesthandle = Handle
            end
       else
            biggesthandle = gp(v, "Handle", "BasePart")
        end
    end
end

if not biggesthandle then
    return
end

local handle1 = gp(gp(model, biggesthandle.Parent.Name, "Accessory"), "Handle", "BasePart")
if not handle1 then
    return
end

handle1.Destroying:Connect(function()
    handle1 = nil
end)
biggesthandle.Destroying:Connect(function()
    biggesthandle = nil
end)

biggesthandle:BreakJoints()
biggesthandle.Anchored = true

for i, v in pairs(handle1:GetDescendants()) do
    if v:IsA("AlignOrientation") then
        v.Enabled = false
   end
end

local mouse = lp:GetMouse()
local fling = false
mouse.Button1Down:Connect(function()
    fling = true
end)
mouse.Button1Up:Connect(function()
    fling = false
end)
local function doForSignal(signal, vel)
    spawn(function()
        while signal:Wait() and c and handle1 and biggesthandle do
            if fling and mouse.Target then
                biggesthandle.Position = mouse.Hit.Position
            end
            handle1.RotVelocity = vel
        end
    end)
end
doForSignal(stepped, v3(100, 100, 100))
doForSignal(renderstepped, v3(100, 100, 100))
doForSignal(heartbeat, v3(20000, 20000, 20000)) --https://web.roblox.com/catalog/63690008/Pal-Hair

local lp = game:GetService("Players").LocalPlayer
local rs = game:GetService("RunService")
local stepped = rs.Stepped
local heartbeat = rs.Heartbeat
local renderstepped = rs.RenderStepped
local sg = game:GetService("StarterGui")
local ws = game:GetService("Workspace")
local cf = CFrame.new
local v3 = Vector3.new
local v3_0 = Vector3.zero
local inf = math.huge

local cplayer = lp.Character

local v3 = Vector3.new

local function gp(parent, name, className)
    if typeof(parent) == "Instance" then
        for i, v in pairs(parent:GetChildren()) do
            if (v.Name == name) and v:IsA(className) then
                return v
            end
        end
    end
    return nil
end

local hat2 = gp(cplayer, "SeeMonkey", "Accessory")
local handle2 = gp(hat2, "Handle", "BasePart")
local att2 = gp(handle2, "att1_Handle", "Attachment")
att2.Parent = cplayer["Torso"]
att2.Position = Vector3.new(0, -0, 0)
att2.Rotation = Vector3.new(90, 0, 0)

local hat2 = gp(cplayer, "Pink Hair", "Accessory")
local handle2 = gp(hat2, "Handle", "BasePart")
local att2 = gp(handle2, "att1_Handle", "Attachment")
att2.Parent = cplayer["Left Arm"]
att2.Position = Vector3.new(0, -0, 0)
att2.Rotation = Vector3.new(90, 0, 0)

local hat2 = gp(cplayer, "Kate Hair", "Accessory")
local handle2 = gp(hat2, "Handle", "BasePart")
local att2 = gp(handle2, "att1_Handle", "Attachment")
att2.Parent = cplayer["Right Arm"]
att2.Position = Vector3.new(-0, -0, 0)
att2.Rotation = Vector3.new(90, 0, 0) --LavanderHair

local hat2 = gp(cplayer, "LavanderHair", "Accessory")
local handle2 = gp(hat2, "Handle", "BasePart")
local att2 = gp(handle2, "att1_Handle", "Attachment")
att2.Parent = cplayer["Right Leg"]
att2.Position = Vector3.new(0, 0, 0) --Robloxclassicred
att2.Rotation = Vector3.new(90, 0, 0)

local hat2 = gp(cplayer, "Robloxclassicred", "Accessory")
local handle2 = gp(hat2, "Handle", "BasePart")
local att2 = gp(handle2, "att1_Handle", "Attachment")
att2.Parent = cplayer["Left Leg"]
att2.Position = Vector3.new(-0, 0, 0) 
att2.Rotation = Vector3.new(90, 0, 0)

_G.loop = true
local player = game.Players.LocalPlayer
local char = player.Character
local Align = function(Part0, Part1,Mesh)
    local Aligns = {
        AlignOrientation = Instance.new("AlignOrientation", Part0),
        AlignPosition = Instance.new("AlignPosition", Part0)
    }
    
    local Attachments = {
        Attach0 = Instance.new("Attachment", Part0),
        Attach1 = Instance.new("Attachment", Part1)
    }
    local m = Part0:FindFirstChildOfClass('SpecialMesh')--This will get the first "SpecialMesh" it finds if it does not find any, then it will return nil
    if Mesh and m then --If Mesh is set to true and it finds a mesh it will destroy it
        m:Destroy()
    end
    Part0:BreakJoints()
    Aligns.AlignOrientation.Attachment0 = Attachments.Attach0
    Aligns.AlignOrientation.Attachment1 = Attachments.Attach1
    Aligns.AlignOrientation.Responsiveness = math.huge
    Aligns.AlignOrientation.RigidityEnabled = true
    
    Aligns.AlignPosition.Attachment0 = Attachments.Attach0
    Aligns.AlignPosition.Attachment1 = Attachments.Attach1
    Aligns.AlignPosition.Responsiveness = math.huge
    Aligns.AlignPosition.RigidityEnabled = true
        Aligns.AlignPosition.MaxForce = 999999999
        spawn(function()
            while _G.loop do 
                local mag = (Part0.Position - (Part1.CFrame*Attachments.Attach0.CFrame:Inverse()).p).magnitude--magnitude can get the distance between two cframe or position
                if mag >= 5 then 
                Part0.CFrame = Part1.CFrame*Attachments.Attach0.CFrame:Inverse()
                end
                Part0.Velocity = Vector3.new(0,35,0)
                game['Run Service'].Heartbeat:wait()
                end
        end)
 return {Attachments.Attach0, Attachments, Aligns}
        
end 
local hat = Align(char['VANS_Umbrella'].Handle,char['HumanoidRootPart'],false)
local cf = char['HumanoidRootPart'].CFrame*CFrame.new(0,-20,-0)*CFrame.Angles(math.rad(0),math.rad(0),0)
hat[1].CFrame = cf:Inverse() * char['HumanoidRootPart'].CFrame
spawn(function()
    char.AncestryChanged:wait()--if you respawn, it will stop the  loop to avoid lag of using it over and over
    _G.loop = false 
end)
for i,v in pairs (char:GetChildren()) do
	if v:IsA("Accessory") then
		v.Handle.Massless = true
		v.Handle.CustomPhysicalProperties = PhysicalProperties.new(0,0,0,0,0)
	end
end

















local plr = game.Players.LocalPlayer
local chr = plr.Character
local maus = plr:GetMouse()
local PGui=plr.PlayerGui
local lleg = chr["Left Leg"]
local rleg = chr["Right Leg"]
local larm = chr["Left Arm"]
local rarm = chr["Right Arm"]
local hed = chr.Head
local rutprt = chr.HumanoidRootPart
local torso = chr.Torso
local otheranims=false
local armmovement=false
local equipped=false
chr.Animate.Disabled=true
local RunSpeed=40
local WlkSpeed=20
local CrawlSpeed=10
local CrawlDashSpeed=20
local runnin=false
local tik=0
local fldb={['w']=false,['a']=false,['s']=false,['d']=false}
local Meows={"60871617","151742282","138093919"}
local leftnekoface="260195370"
local rightnekoface="260196558"
local swing="Right"
local armanim=""
local hitdb=false

local RightNekoColor=BrickColor.new("Really black")
local LeftNekoColor=BrickColor.new("Institutional white")



coroutine.wrap(function()
for i,x in pairs(hed:GetChildren()) do if x:IsA('Sound') then x:Destroy() end end end)()
function Lerp(a, b, i)
local com1 = {a.X, a.Y, a.Z, a:toEulerAnglesXYZ()}
local com2 = {b.X, b.Y, b.Z, b:toEulerAnglesXYZ()}
local calx = com1[1] + (com2[1] - com1[1]) * i
local caly = com1[2] + (com2[2] - com1[2]) * i
local calz = com1[3] + (com2[3] - com1[3]) * i
local cala = com1[4] + (com2[4] - com1[4]) * i
local calb = com1[5] + (com2[5] - com1[5]) * i
local calc = com1[6] + (com2[6] - com1[6]) * i
return CFrame.new(calx, caly, calz) * CFrame.Angles(cala, calb, calc)
end
function TwnSingleNumber(s,f,m)
local wot=s+(f-s)*m
return wot
end
function TwnVector3(q,w,e)
local begin={q.x,q.y,q.z}
local ending={w.x,w.y,w.z}
local bgx=begin[1]+(ending[1]-begin[1])*e
local bgy=begin[2]+(ending[2]-begin[2])*e
local bgz=begin[3]+(ending[3]-begin[3])*e
return Vector3.new(bgx,bgy,bgz)
end
newWeld = function(wld, wp0, wp1, wc0x, wc0y, wc0z)
wld = Instance.new("Weld", wp1)
wld.Part0 = wp0
wld.Part1 = wp1
wld.C0 = CFrame.new(wc0x, wc0y, wc0z)
end
function Avg(a, b)
return CFrame.new((a.X+b.X)/2,(a.Y+b.Y)/2,(a.Z+b.Z)/2)
end

newWeld(law, torso, larm, -1.5, 0.5, 0)
newWeld(raw, torso, rarm, 1.5, 0.5, 0)
newWeld(llw, torso, lleg, -.5, -2, 0)
newWeld(rlw, torso, rleg, .5, -2, 0)
newWeld(hw, torso, hed, 0, 1.5, 0)
local rutwald=Instance.new('Weld',rutprt)
rutwald.Part0=rutprt
rutwald.Part1=torso
rutwald.C1=CFrame.new(0,0,0)*CFrame.Angles(math.rad(0),math.rad(0),0)
larm.Weld.C1 = CFrame.new(0, 0.5, 0)
rarm.Weld.C1 = CFrame.new(0, 0.5, 0)
rleg.Weld.C1=CFrame.new(0,0,0)*CFrame.Angles(math.rad(0),0,0)
lleg.Weld.C1=CFrame.new(0,0,0)*CFrame.Angles(math.rad(0),0,0)


local anim = "Idling"
local lastanim = "Idling"
local val = 0
local syne = 0
local num = 0
local runtime = 0




local NekoNekoKnuckles=Instance.new("Model",chr)
NekoNekoKnuckles.Name="Neko Neko Knuckles"
local RightNeko=Instance.new("Model",NekoNekoKnuckles)
RightNeko.Name="Right Neko"
local LeftNeko=Instance.new("Model",NekoNekoKnuckles)
LeftNeko.Name="Left Neko"






--[[			Right Neko			]]--




local rn1=Instance.new("Part",RightNeko)
rn1.Name="RightHandle"
rn1.Material="SmoothPlastic"
rn1.TopSurface=10
rn1.BottomSurface=10
rn1.LeftSurface=10
rn1.RightSurface=10
rn1.FrontSurface=10
rn1.BackSurface=10
rn1.BrickColor=RightNekoColor
rn1.formFactor=3
rn1.Size=Vector3.new(1.1,1.3,1.1)
rn1.CanCollide=false
rn1:breakJoints''
local rn1w=Instance.new("Weld",rn1)
rn1w.Part0=rn1
rn1w.Part1=rarm
rn1w.C0=CFrame.new(0,.4,0)

local rn2=Instance.new("Part",RightNeko)
rn2.Name="RightHandle"
rn2.Material="SmoothPlastic"
rn2.TopSurface=10
rn2.BottomSurface=10
rn2.LeftSurface=10
rn2.RightSurface=10
rn2.FrontSurface=10
rn2.BackSurface=10
rn2.BrickColor=RightNekoColor
rn2.formFactor=3
rn2.Size=Vector3.new(1.2,.4,1.2)
rn2.CanCollide=false
rn2:breakJoints''
local rn2w=Instance.new("Weld",rn2)
rn2w.Part0=rn2
rn2w.Part1=rarm
rn2w.C0=CFrame.new(0,-.1,0)

local rnbell=Instance.new("Part",RightNeko)
rnbell.Name="RightBell"
rnbell.Material="SmoothPlastic"
rnbell.TopSurface=10
rnbell.BottomSurface=10
rnbell.LeftSurface=10
rnbell.RightSurface=10
rnbell.FrontSurface=10
rnbell.BackSurface=10
rnbell.BrickColor=BrickColor.new("New Yeller")
rnbell.Reflectance=.6
rnbell.formFactor=3
rnbell.Size=Vector3.new(.45,.45,.45)
rnbell.CanCollide=false
rnbell:breakJoints''
local rnbellw=Instance.new("Weld",rnbell)
rnbellw.Part0=rnbell
rnbellw.Part1=rarm
rnbellw.C0=CFrame.new(0,.3,.65)
local rnbellm=Instance.new("SpecialMesh",rnbell)
rnbellm.MeshType="Sphere"

local rnbf=Instance.new("PointLight",rnbell)
rnbf.Shadows=true
rnbf.Range=15
rnbf.Brightness=10

local rnding=Instance.new("Sound",rnbell)
rnding.SoundId="http://www.roblox.com/asset?id=138134386"
rnding.Volume=.2

local rn3=Instance.new("Part",RightNeko)
rn3.Name="RightHead"
rn3.Material="SmoothPlastic"
rn3.TopSurface=10
rn3.BottomSurface=10
rn3.LeftSurface=10
rn3.RightSurface=10
rn3.FrontSurface=10
rn3.BackSurface=10
rn3.BrickColor=RightNekoColor
rn3.formFactor=3
rn3.Size=Vector3.new(1.575,1.65,1.575)
rn3.CanCollide=false
rn3:breakJoints''
local rn3w=Instance.new("Weld",rn3)
rn3w.Part0=rn3
rn3w.Part1=rarm
rn3w.C0=CFrame.new(0,.95,0)
local rn3m=Instance.new("SpecialMesh",rn3)
rn3m.MeshType="Sphere"

local rnface=Instance.new("Decal",rn3)
rnface.Texture="http://www.roblox.com/asset?id="..rightnekoface
rnface.Face="Bottom"

local rnpunch=Instance.new("Sound",rn3)
rnpunch.SoundId="http://www.roblox.com/asset?id=146163534"
rnpunch.Volume=.3

rn3.Touched:connect(function(hit)
if hit and swing=="Right" and crawling and armmovement and crawldig then
local j=2
for jx=-j,j,4 do
for jy=-j,j,4 do
for jz=-j,j,4 do
local spot=workspace.Terrain:WorldToCell(rn3.CFrame*CFrame.new(0,0,-2).p+Vector3.new(jx,jy,jz))
workspace.Terrain:SetCell(spot.x,spot.y,spot.z,0,0,0)
end
end
end
end
coroutine.wrap(function()
if hit and swing=="Right" and armmovement then
coroutine.resume(coroutine.create(function()
local j=2
for jx=-j,j,4 do
for jy=-j,j,4 do
for jz=-j,j,4 do
local spot=workspace.Terrain:WorldToCell(rn3.CFrame*CFrame.new(0,0,-2).p+Vector3.new(jx,jy,jz))
workspace.Terrain:SetCell(spot.x,spot.y,spot.z,0,0,0)
end
end
end
end))
if hit.Parent then
for i,x in pairs(hit.Parent:GetChildren()) do if x:IsA('Humanoid') then hyoom=x end end
local hawm=hit.Parent and hyoom and hit.Parent.Parent
if hawm and hit.Parent.ClassName=='Model' and hit.Parent~=chr and not hitdb then
hitdb=true
local nyaa=Instance.new("Sound",rn3)
nyaa.SoundId="http://www.roblox.com/asset?id="..Meows[math.random(1,#Meows)]
nyaa:Play''
rnpunch:Play''
game:service'Debris':AddItem(nyaa,2)
if hyoom.Parent and hyoom.Parent:findFirstChild("Torso") then
local asd=Instance.new("BodyVelocity",hyoom.Parent.Torso)
asd.maxForce=Vector3.new(1/0,1/0,1/0)
asd.velocity=((rn3.CFrame.p-hyoom.Parent.Torso.CFrame.p).unit*-0)+Vector3.new(0,10,0)
game:service'Debris':AddItem(asd,.2)
end
hyoom.Sit=true
if crawling then
hyoom.Health=hyoom.Health-(math.random(0,0)*(hyoom.MaxHealth/100))
wait(.5)
hitdb=false
else
hyoom.Health=hyoom.Health-(math.random(0,0)*(hyoom.MaxHealth/100))
wait(1)
hitdb=false
end
end
end
end
end)()
end)

local rn4=Instance.new("Part",RightNeko)
rn4.Name="RightHandle"
rn4.Material="SmoothPlastic"
rn4.TopSurface=10
rn4.BottomSurface=10
rn4.LeftSurface=10
rn4.RightSurface=10
rn4.FrontSurface=10
rn4.BackSurface=10
rn4.BrickColor=RightNekoColor
rn4.formFactor=3
rn4.Size=Vector3.new(1.575,.2,1.575)
rn4.CanCollide=false
rn4:breakJoints''
local rn4w=Instance.new("Weld",rn4)
rn4w.Part0=rn4
rn4w.Part1=rn3
rn4w.C0=CFrame.new(0,-.75,.15)*CFrame.Angles(math.rad(90),0,0)
local rn4m=Instance.new("SpecialMesh",rn4)
rn4m.Scale=Vector3.new(1.2,1.2,1.2)
rn4m.MeshId="http://www.roblox.com/asset?id=1374148"
rn4m.TextureId="http://www.roblox.com/asset?id=1374132"












local ln1=Instance.new("Part",LeftNeko)
ln1.Name="LeftHandle"
ln1.Material="SmoothPlastic"
ln1.TopSurface=10
ln1.BottomSurface=10
ln1.LeftSurface=10
ln1.RightSurface=10
ln1.FrontSurface=10
ln1.BackSurface=10
ln1.BrickColor=LeftNekoColor
ln1.formFactor=3
ln1.Size=Vector3.new(1.1,1.3,1.1)
ln1.CanCollide=false
ln1:breakJoints''
local ln1w=Instance.new("Weld",ln1)
ln1w.Part0=ln1
ln1w.Part1=larm
ln1w.C0=CFrame.new(0,.4,0)

local ln2=Instance.new("Part",LeftNeko)
ln2.Name="LeftHandle"
ln2.Material="SmoothPlastic"
ln2.TopSurface=10
ln2.BottomSurface=10
ln2.LeftSurface=10
ln2.RightSurface=10
ln2.FrontSurface=10
ln2.BackSurface=10
ln2.BrickColor=LeftNekoColor
ln2.formFactor=3
ln2.Size=Vector3.new(1.2,.4,1.2)
ln2.CanCollide=false
ln2:breakJoints''
local ln2w=Instance.new("Weld",ln2)
ln2w.Part0=ln2
ln2w.Part1=larm
ln2w.C0=CFrame.new(0,-.1,0)

local lnbell=Instance.new("Part",LeftNeko)
lnbell.Name="LeftBell"
lnbell.Material="SmoothPlastic"
lnbell.TopSurface=10
lnbell.BottomSurface=10
lnbell.LeftSurface=10
lnbell.RightSurface=10
lnbell.FrontSurface=10
lnbell.BackSurface=10
lnbell.BrickColor=BrickColor.new("New Yeller")
lnbell.Reflectance=.6
lnbell.formFactor=3
lnbell.Size=Vector3.new(.45,.45,.45)
lnbell.CanCollide=false
lnbell:breakJoints''
local lnbellw=Instance.new("Weld",lnbell)
lnbellw.Part0=lnbell
lnbellw.Part1=larm
lnbellw.C0=CFrame.new(0,.3,.65)
local lnbellm=Instance.new("SpecialMesh",lnbell)
lnbellm.MeshType="Sphere"

local lnbf=Instance.new("PointLight",lnbell)
lnbf.Shadows=true
lnbf.Range=15
lnbf.Brightness=10

local lnding=Instance.new("Sound",lnbell)
lnding.SoundId="http://www.roblox.com/asset?id=138134386"
lnding.Volume=.2

local ln3=Instance.new("Part",LeftNeko)
ln3.Name="LeftHead"
ln3.Material="SmoothPlastic"
ln3.TopSurface=10
ln3.BottomSurface=10
ln3.LeftSurface=10
ln3.RightSurface=10
ln3.FrontSurface=10
ln3.BackSurface=10
ln3.BrickColor=LeftNekoColor
ln3.formFactor=3
ln3.Size=Vector3.new(1.575,1.65,1.575)
ln3.CanCollide=false
ln3:breakJoints''
local ln3w=Instance.new("Weld",ln3)
ln3w.Part0=ln3
ln3w.Part1=larm
ln3w.C0=CFrame.new(0,.95,0)
local ln3m=Instance.new("SpecialMesh",ln3)
ln3m.MeshType="Sphere"

local lnface=Instance.new("Decal",ln3)
lnface.Texture="http://www.roblox.com/asset?id="..leftnekoface
lnface.Face="Bottom"


local lnpunch=Instance.new("Sound",ln3)
lnpunch.SoundId="http://www.roblox.com/asset?id=146163534"
lnpunch.Volume=.3

ln3.Touched:connect(function(hit)
if hit and swing=="Left" and crawling and armmovement and crawldig then
local j=2
for jx=-j,j,4 do
for jy=-j,j,4 do
for jz=-j,j,4 do
local spot=workspace.Terrain:WorldToCell(ln3.CFrame*CFrame.new(0,0,-2).p+Vector3.new(jx,jy,jz))
workspace.Terrain:SetCell(spot.x,spot.y,spot.z,0,0,0)
end
end
end
end
coroutine.wrap(function()
if hit and swing=="Left" and armmovement then
coroutine.resume(coroutine.create(function()
local j=2
for jx=-j,j,4 do
for jy=-j,j,4 do
for jz=-j,j,4 do
local spot=workspace.Terrain:WorldToCell(ln3.CFrame*CFrame.new(0,0,-2).p+Vector3.new(jx,jy,jz))
workspace.Terrain:SetCell(spot.x,spot.y,spot.z,0,0,0)
end
end
end
end))
if hit.Parent then
for i,x in pairs(hit.Parent:GetChildren()) do if x:IsA('Humanoid') then hyoom=x end end
local hawm=hit.Parent and hyoom and hit.Parent.Parent
if hawm and hit.Parent.ClassName=='Model' and hit.Parent~=chr and not hitdb then

hitdb=true
local nyaa=Instance.new("Sound",rn3)
nyaa.SoundId="http://www.roblox.com/asset?id="..Meows[math.random(1,#Meows)]
nyaa:Play''
rnpunch:Play''
game:service'Debris':AddItem(nyaa,3)
if hyoom.Parent:findFirstChild("Torso") then
local asd=Instance.new("BodyVelocity",hyoom.Parent.Torso)
asd.maxForce=Vector3.new(1/0,1/0,1/0)
asd.velocity=((ln3.CFrame.p-hyoom.Parent.Torso.CFrame.p).unit*-0)+Vector3.new(0,10,0)
game:service'Debris':AddItem(asd,.2)
end
hyoom.Sit=true
if crawling then
hyoom.Health=hyoom.Health-(math.random(0,0)*(hyoom.MaxHealth/100))
wait(.5)
hitdb=false
else
hyoom.Health=hyoom.Health-(math.random(0,0)*(hyoom.MaxHealth/100))
wait(1)
hitdb=false
end
end
end
end
end)()
end)

local ln4=Instance.new("Part",LeftNeko)
ln4.Name="LeftHandle"
ln4.Material="SmoothPlastic"
ln4.TopSurface=10
ln4.BottomSurface=10
ln4.LeftSurface=10
ln4.RightSurface=10
ln4.FrontSurface=10
ln4.BackSurface=10
ln4.BrickColor=LeftNekoColor
ln4.formFactor=3
ln4.Size=Vector3.new(1.575,.2,1.575)
ln4.CanCollide=false
ln4:breakJoints''
local ln4w=Instance.new("Weld",ln4)
ln4w.Part0=ln4
ln4w.Part1=ln3
ln4w.C0=CFrame.new(0,-.75,.15)*CFrame.Angles(math.rad(90),0,0)
local ln4m=Instance.new("SpecialMesh",ln4)
ln4m.Scale=Vector3.new(1.2,1.2,1.2)
ln4m.MeshId="http://www.roblox.com/asset?id=1374148"
ln4m.TextureId="http://www.roblox.com/asset?id=59596104"







maus.KeyDown:connect(function(kei)
if string.byte(kei)==48 and not otheranims and not sitting and not disabled then
runnin=true
end
if string.byte(kei)==48 and crawling and not sitting and not disabled then
crawldash=true
end
if kei=='w' then fldb.w=true end
if kei=='a' then fldb.a=true end
if kei=='s' then fldb.s=true end
if kei=='d' then fldb.d=true end


if string.byte(kei)==50 and not crawling then
if crouching then
otheranims=false
crouching=false
chr.Humanoid.WalkSpeed=18
elseif not crouching and not otheranims then 
otheranims=true
crouching=true
anim="Crouching"
end
end

if kei=='j' and not otheranims and not armmovement and not disabled and not lit then
otheranims=true
anim="PreSuperJump"
chr.Humanoid.WalkSpeed=0
jumpcharge=true
end

if kei=='c' and not armmovement and not sitting and not disabled then
if (torso.Velocity*Vector3.new(1,0,1)).magnitude>=RunSpeed-2.5 and not otheranims and not crawling then
otheranims=true
anim="Sliding"
local tempvelocity=Instance.new('BodyVelocity',rutprt)
tempvelocity.Name="TemporaryVelocity"
tempvelocity.maxForce=Vector3.new(math.huge,0,math.huge)
tempvelocity.velocity=((rutprt.CFrame*CFrame.new(0,0,-1)).p-rutprt.CFrame.p).unit*RunSpeed
coroutine.resume(coroutine.create(function()
local totesvelocity=RunSpeed
repeat
if (tempvelocity.velocity*Vector3.new(1,1,1)).magnitude<=1 then otheranims=false tempvelocity:destroy''
elseif (tempvelocity.velocity*Vector3.new(1,1,1)).magnitude>1 then
totesvelocity=totesvelocity-(2.5*(RunSpeed/100))
tempvelocity.velocity=((rutprt.CFrame*CFrame.new(0,0,-1)).p-rutprt.CFrame.p).unit*totesvelocity
end
wait''
until tempvelocity.Parent==nil
end))
elseif (torso.Velocity*Vector3.new(1,0,1)).magnitude<=RunSpeed-2.5 then
if not crawling then otheranims=true anim='PreCrawl' wait'.2' crawling=true chr.Humanoid.WalkSpeed=8
elseif crawling then crawling=false otheranims=false chr.Humanoid.WalkSpeed=WlkSpeed end
end
end
end)
maus.KeyUp:connect(function(kei)
if string.byte(kei)==48 and not otheranims and not sitting and not disabled then
runnin=false
end
if string.byte(kei)==48 and crawling then
crawldash=false
end
if kei=='w' then fldb.w=false end
if kei=='a' then fldb.a=false end
if kei=='s' then fldb.s=false end
if kei=='d' then fldb.d=false end
if kei=="c" and rutprt:findFirstChild("TemporaryVelocity") and otheranims then
otheranims=false
rutprt["TemporaryVelocity"]:destroy''
end

if kei=='j' and otheranims and jumpcharge then
if running then chr.Humanoid.WalkSpeed=RunSpeed else chr.Humanoid.WalkSpeed=WlkSpeed end
chr.Humanoid.Jump=true
anim="SuperJump"
local aasdd=Instance.new("BodyVelocity",rutprt)
aasdd.maxForce=Vector3.new(0,1/0,0)
aasdd.velocity=Vector3.new(0,jumpheight,0)
game:service'Debris':AddItem(aasdd,.175)
jumpcharge=false
wait(.3)
otheranims=false
end
end)

maus.Button1Down:connect(function()
if not sitting and not disabled and not armmovement and equipped and crawling then
crawldig=true
armmovement=true
armanim="Digging"
end
if not otheranims and not sitting and not disabled and not armmovement and equipped then
armmovement=true
armanim=swing.."Swing1"
wait(.25)
armanim=swing.."Swing2"
if swing=="Right" then
rnding:Play()
coroutine.resume(coroutine.create(function()
wait(.65)
rnding:Stop()
end))
else
lnding:Play()
coroutine.resume(coroutine.create(function()
wait(.65)
lnding:Stop()
end))
end
wait(.3)
armmovement=false
if swing=="Right" then swing="Left"
else
swing="Right"
end
end
end)

maus.Button1Up:connect(function()
if armmovement and crawldig then
crawldig=false
armmovement=false
end
end)



chr.Humanoid.Changed:connect(function(chng)
if crouching or crawling or disabled then
if chng=='Jump' then
chr.Humanoid.Jump=false
end
end
end)














game:service'RunService'.RenderStepped:connect(function()
syne=syne+1
if not otheranims and not swimming then
if (torso.Velocity*Vector3.new(1, 0, 1)).magnitude < 1 and not dnc and not chr.Humanoid.Jump then-- and torso.Velocity.y<5 and torso.Velocity.y>-5
anim="Idling"

elseif (rutprt.Velocity*Vector3.new(1, 0, 1)).magnitude > 1 and (rutprt.Velocity*Vector3.new(1, 0, 1)).magnitude < RunSpeed-5 and not chr.Humanoid.Jump then-- and torso.Velocity.y<5 and torso.Velocity.y>-5
anim="Walking"
dnc=false

elseif (torso.Velocity*Vector3.new(1, 0, 1)).magnitude > RunSpeed-10 and not chr.Humanoid.Jump then-- and torso.Velocity.y<5 and torso.Velocity.y>-5
anim="Sprinting"
dnc=false

elseif torso.Velocity.y>5 and chr.Humanoid.Jump then
anim='Jumping'
dnc=false

elseif (torso.Velocity.y < -5) and chr.Humanoid.Jump then
anim='Falling'
dnc=false

end
end

if otheranims and crawling then
if (torso.Velocity*Vector3.new(1, 0, 1)).magnitude < 1 and not chr.Humanoid.Jump then
anim="IdleCrawl"
elseif (torso.Velocity*Vector3.new(1, 0, 1)).magnitude > 1 and (torso.Velocity*Vector3.new(1, 0, 1)).magnitude < 12 and not chr.Humanoid.Jump then
anim="Crawling"
idled=false
elseif (torso.Velocity*Vector3.new(1, 0, 1)).magnitude > 1 and (torso.Velocity*Vector3.new(1, 0, 1)).magnitude > 12 and not chr.Humanoid.Jump then
anim="SpeedCrawling"
idled=false
end end

if anim~=lastanim then runtime=0 syne=0 end
lastanim=anim
idlesineinc=35
if anim=="Idling" then
if not armmovement and not equipped then
rarm.Weld.C0=Lerp(rarm.Weld.C0,CFrame.new(1.5,.525+math.cos(syne/idlesineinc)/25,0)*CFrame.Angles(0,0,math.rad(10)),.1)
larm.Weld.C0=Lerp(larm.Weld.C0,CFrame.new(-1.5,.525+math.cos(syne/idlesineinc)/25,0)*CFrame.Angles(0,0,math.rad(-10)),.1)
elseif not armmovement and equipped then
rarm.Weld.C0=Lerp(rarm.Weld.C0,CFrame.new(1.2,.4+math.cos(syne/idlesineinc)/25,.1)*CFrame.Angles(math.rad(105),math.rad(-15),math.rad(-20)),.1)
larm.Weld.C0=Lerp(larm.Weld.C0,CFrame.new(-1.1,.20+math.cos(syne/idlesineinc)/25,-.65)*CFrame.Angles(math.rad(90),math.rad(10),math.rad(15)),.1)
end
lleg.Weld.C0=Lerp(lleg.Weld.C0,CFrame.new(-.55,-1.9-math.cos(syne/idlesineinc)/20,(math.cos(syne/idlesineinc)/35))*CFrame.Angles(-(math.cos(syne/idlesineinc)/35),0,math.rad(-2.5)),.1)
rleg.Weld.C0=Lerp(rleg.Weld.C0,CFrame.new(.55,-1.9-math.cos(syne/idlesineinc)/20,(math.cos(syne/idlesineinc)/35))*CFrame.Angles(-(math.cos(syne/idlesineinc)/35),0,math.rad(2.5)),.1)
hed.Weld.C0=Lerp(hed.Weld.C0,CFrame.new(0,1.5+math.cos(syne/idlesineinc)/50,0)*CFrame.Angles(math.cos(syne/idlesineinc)/40,0,0),.1)
rutprt.Weld.C0=Lerp(rutprt.Weld.C0,CFrame.new(0,-.1+math.cos(syne/idlesineinc)/20,0)*CFrame.Angles(math.cos(syne/idlesineinc)/35+math.rad(0),math.rad(0),math.rad(0)),.1)
end

if anim=="Walking" then
if not armmovement and not equipped then
rarm.Weld.C0=Lerp(rarm.Weld.C0,CFrame.new(1.5,.525,0)*CFrame.Angles(math.cos(syne/6)/1.25,math.rad(5),-(math.cos(syne/6.75)/15)+math.rad(8)),.1)
larm.Weld.C0=Lerp(larm.Weld.C0,CFrame.new(-1.5,.525,0)*CFrame.Angles(-(math.cos(syne/6)/1.25),0,-(math.cos(syne/6.75)/15)-math.rad(8)),.1)
elseif not armmovement and equipped then
rarm.Weld.C0=Lerp(rarm.Weld.C0,CFrame.new(1.4,.425,-.2)*CFrame.Angles(math.rad(40),math.rad(10),math.rad(5)),.1)
larm.Weld.C0=Lerp(larm.Weld.C0,CFrame.new(-1.4,.425,-.2)*CFrame.Angles(math.rad(40),math.rad(-10),math.rad(-5)),.1)
end

lleg.Weld.C0=Lerp(lleg.Weld.C0,CFrame.new(-.55,-1.8-math.sin(syne/6)/8,-(math.cos(syne/6)/1.125))*CFrame.Angles(math.cos(syne/6)/1.125,0,math.rad(-2.5)),.1)
rleg.Weld.C0=Lerp(rleg.Weld.C0,CFrame.new(.55,-1.8+math.sin(syne/6)/8,math.cos(syne/6)/1.125)*CFrame.Angles(-(math.cos(syne/6)/1.125),0,math.rad(2.5)),.1)
hed.Weld.C0=Lerp(hed.Weld.C0,CFrame.new(0,1.5+math.cos(syne/20)/50,0)*CFrame.Angles(-math.cos(syne/3)/20,0,0),.1)
rutprt.Weld.C0=Lerp(rutprt.Weld.C0,CFrame.new(0,-.2+math.cos(syne/3.375)/20,math.cos(syne/3)/5)*CFrame.Angles(math.cos(syne/3)/20+math.rad(-3.5),math.cos(syne/6)/8,-math.cos(syne/6)/30+math.sin(rutprt.RotVelocity.y/2)/7.5),.1)
end

if anim=="Sprinting" then
if not armmovement and not equipped then
rarm.Weld.C0=Lerp(rarm.Weld.C0,CFrame.new(1.5,.525,math.cos(syne/4)/15)*CFrame.Angles(-math.cos(syne/2.5)/5+math.rad(-55),0,math.rad(12.5)),.1)
larm.Weld.C0=Lerp(larm.Weld.C0,CFrame.new(-1.5,.525,-math.cos(syne/4)/15)*CFrame.Angles(-math.cos(syne/2.5)/5+math.rad(-55),0,math.rad(-12.5)),.1)
elseif not armmovement and equipped then
rarm.Weld.C0=Lerp(rarm.Weld.C0,CFrame.new(1.4,.5,-.1)*CFrame.Angles(math.rad(-5),math.rad(10),math.rad(35)),.1)
larm.Weld.C0=Lerp(larm.Weld.C0,CFrame.new(-1.4,.5,-.1)*CFrame.Angles(math.rad(-5),math.rad(-10),math.rad(-35)),.1)
end
lleg.Weld.C0=Lerp(lleg.Weld.C0,CFrame.new(-.55+math.cos(syne/4)/20,-1.5-math.sin(syne/4)/2.5,-(math.cos(syne/4)*2.5)-.05)*CFrame.Angles(math.cos(syne/4)*2+math.rad(-10),0,math.rad(-2.5)),.1)
rleg.Weld.C0=Lerp(rleg.Weld.C0,CFrame.new(.55-math.cos(syne/4)/20,-1.5+math.sin(syne/4)/2.5,math.cos(syne/4)*2.5-.05)*CFrame.Angles(-(math.cos(syne/4)*2)+math.rad(-10),0,math.rad(2.5)),.1)
hed.Weld.C0=Lerp(hed.Weld.C0,CFrame.new(0,1.55+math.cos(syne/20)/50,0)*CFrame.Angles(-math.cos(syne/2.5)/10+math.rad(20),-math.cos(syne/2.5)/8,0),.1)
rutprt.Weld.C0=Lerp(rutprt.Weld.C0,CFrame.new(0,-.3+math.cos(syne/2.5)/15,math.cos(syne/2.5))*CFrame.Angles(math.cos(syne/2.5)/8+math.rad(-25),math.cos(syne/2.5)/8,math.cos(syne/4)/15+math.sin(rutprt.RotVelocity.y/2)/4),.1)
end

if anim=="Jumping" then
if not armmovement then
rarm.Weld.C0=Lerp(rarm.Weld.C0,CFrame.new(1.5,.525,0)*CFrame.Angles(math.rad(10),0,math.rad(50)),.1)
larm.Weld.C0=Lerp(larm.Weld.C0,CFrame.new(-1.5,.525,0)*CFrame.Angles(math.rad(10),0,math.rad(-50)),.1)
end
lleg.Weld.C0=Lerp(lleg.Weld.C0,CFrame.new(-.55,-1.4,0)*CFrame.Angles(math.rad(-17.5),0,math.rad(-2.5)),.1)
rleg.Weld.C0=Lerp(rleg.Weld.C0,CFrame.new(.55,-1.1,-.1)*CFrame.Angles(math.rad(-17.5),0,math.rad(2.5)),.1)
hed.Weld.C0=Lerp(hed.Weld.C0,CFrame.new(0,1.5+math.cos(syne/20)/50,0)*CFrame.Angles(math.cos(syne/20)/40,0,0),.1)
rutprt.Weld.C0=Lerp(rutprt.Weld.C0,CFrame.new(0,-.1+math.cos(syne/20)/20,0)*CFrame.Angles(math.rad(-15),math.rad(0),math.rad(0)),.1)
end

if anim=="Falling" then
if not armmovement then
rarm.Weld.C0=Lerp(rarm.Weld.C0,CFrame.new(1.5,.525,0)*CFrame.Angles(math.rad(10),0,math.rad(70)),.035)
larm.Weld.C0=Lerp(larm.Weld.C0,CFrame.new(-1.5,.525,0)*CFrame.Angles(math.rad(10),0,math.rad(-70)),.035)
end
lleg.Weld.C0=Lerp(lleg.Weld.C0,CFrame.new(-.55,-1.2,0)*CFrame.Angles(math.rad(-14),0,math.rad(-2.5)),.035)
rleg.Weld.C0=Lerp(rleg.Weld.C0,CFrame.new(.55,-1.9,0)*CFrame.Angles(math.rad(0),0,math.rad(2.5)),.035)
hed.Weld.C0=Lerp(hed.Weld.C0,CFrame.new(0,1.5,-.3)*CFrame.Angles(math.rad(-40),0,0),.035)
rutprt.Weld.C0=Lerp(rutprt.Weld.C0,CFrame.new(0,-.1+math.cos(syne/20)/20,0)*CFrame.Angles(math.rad(10),math.rad(0),math.rad(0)),.035)
end

if anim=="Sliding" then
rarm.Weld.C0=Lerp(rarm.Weld.C0,CFrame.new(1.5,.525,0)*CFrame.Angles(math.rad(-20),0,math.rad(60)),.1)
larm.Weld.C0=Lerp(larm.Weld.C0,CFrame.new(-1.5,.525,0)*CFrame.Angles(math.rad(10),0,math.rad(-50)),.1)
lleg.Weld.C0=Lerp(lleg.Weld.C0,CFrame.new(-.55,-1,-.1)*CFrame.Angles(math.rad(-17.5),0,math.rad(-2.5)),.1)
rleg.Weld.C0=Lerp(rleg.Weld.C0,CFrame.new(.55,-1.95,0)*CFrame.Angles(math.rad(0),0,math.rad(2.5)),.1)
hed.Weld.C0=Lerp(hed.Weld.C0,CFrame.new(0,1.5,-.2)*CFrame.Angles(math.rad(-20),math.rad(-60),0),.1)
rutprt.Weld.C0=Lerp(rutprt.Weld.C0,CFrame.new(0,-1.2,0)*CFrame.Angles(math.rad(45),math.rad(85),math.rad(0)),.1)
end


if armmovement then
if armanim=="RightSwing1" then
rarm.Weld.C0=Lerp(rarm.Weld.C0,CFrame.new(1.4,.25+math.cos(syne/idlesineinc)/25,1.2)*CFrame.Angles(math.rad(95),math.rad(-15),math.rad(15)),.2)
larm.Weld.C0=Lerp(larm.Weld.C0,CFrame.new(-1.2,.35+math.cos(syne/idlesineinc)/25,0)*CFrame.Angles(math.rad(45),math.rad(10),math.rad(10)),.2)
end
if armanim=="RightSwing2" then
rarm.Weld.C0=Lerp(rarm.Weld.C0,CFrame.new(.8,.3+math.cos(syne/idlesineinc)/25,-.8)*CFrame.Angles(math.rad(95),math.rad(15),math.rad(-15)),.5)
larm.Weld.C0=Lerp(larm.Weld.C0,CFrame.new(-1.2,.45+math.cos(syne/idlesineinc)/25,0)*CFrame.Angles(math.rad(45),math.rad(10),math.rad(-10)),.5)
end
if armanim=="LeftSwing1" then
larm.Weld.C0=Lerp(larm.Weld.C0,CFrame.new(-1.4,.25+math.cos(syne/idlesineinc)/25,1.2)*CFrame.Angles(math.rad(95),math.rad(10),math.rad(15)),.2)
rarm.Weld.C0=Lerp(rarm.Weld.C0,CFrame.new(1.2,.35+math.cos(syne/idlesineinc)/25,0)*CFrame.Angles(math.rad(45),math.rad(10),math.rad(10)),.2)
end
if armanim=="LeftSwing2" then
larm.Weld.C0=Lerp(larm.Weld.C0,CFrame.new(-.8,.3+math.cos(syne/idlesineinc)/25,-.8)*CFrame.Angles(math.rad(95),math.rad(-15),math.rad(15)),.5)
rarm.Weld.C0=Lerp(rarm.Weld.C0,CFrame.new(1.2,.45+math.cos(syne/idlesineinc)/25,0)*CFrame.Angles(math.rad(45),math.rad(10),math.rad(10)),.5)
end
if armanim=="Digging" then
rarm.Weld.C0=Lerp(rarm.Weld.C0, CFrame.new(1.25, 1.1+math.cos(syne), -.1)* CFrame.Angles(math.rad(179), 0, math.rad(-25)), 0.5)
larm.Weld.C0 = Lerp(larm.Weld.C0, CFrame.new(-1.25, 1.1-(math.cos(syne)), -.1) * CFrame.Angles(math.rad(179), 0, math.rad(25)), 0.5)
end
end

if jumpcharge and jumpheight<150 then jumpheight=jumpheight+3 elseif not jumpcharge then jumpheight=20 end

if anim=="PreSuperJump" then
rarm.Weld.C0=Lerp(rarm.Weld.C0,CFrame.new(1.5,.525,0)*CFrame.Angles(math.rad(10),0,math.rad(50)),.06)
larm.Weld.C0=Lerp(larm.Weld.C0,CFrame.new(-1.5,.525,0)*CFrame.Angles(math.rad(10),0,math.rad(-50)),.06)
lleg.Weld.C0=Lerp(lleg.Weld.C0,CFrame.new(-.55,-1,.3)*CFrame.Angles(math.rad(-40),0,math.rad(-2.5)),.06)
rleg.Weld.C0=Lerp(rleg.Weld.C0,CFrame.new(.55,-.6,-.65)*CFrame.Angles(math.rad(10),0,math.rad(2.5)),.06)
hed.Weld.C0=Lerp(hed.Weld.C0,CFrame.new(0,1.5,.3)*CFrame.Angles(math.rad(40),0,0),.06)
rutprt.Weld.C0=Lerp(rutprt.Weld.C0,CFrame.new(0,-1.6,.2)*CFrame.Angles(math.rad(-14),math.rad(0),math.rad(0)),.06)
end

if anim=="SuperJump" then
rarm.Weld.C0=Lerp(rarm.Weld.C0,CFrame.new(1.4,.525,0)*CFrame.Angles(math.rad(-10),0,math.rad(20)),.1)
larm.Weld.C0=Lerp(larm.Weld.C0,CFrame.new(-1.4,.525,0)*CFrame.Angles(math.rad(-10),0,math.rad(-20)),.1)
lleg.Weld.C0=Lerp(lleg.Weld.C0,CFrame.new(-.55,-1.8,0)*CFrame.Angles(math.rad(-2.5),0,math.rad(-2.5)),.2)
rleg.Weld.C0=Lerp(rleg.Weld.C0,CFrame.new(.55,-1.8,0)*CFrame.Angles(math.rad(-2.5),0,math.rad(2.5)),.2)
hed.Weld.C0=Lerp(hed.Weld.C0,CFrame.new(0,1.5,.3)*CFrame.Angles(math.rad(30),0,0),.1)
rutprt.Weld.C0=Lerp(rutprt.Weld.C0,CFrame.new(0,0,0)*CFrame.Angles(math.rad(5),math.rad(0),math.rad(0)),.1)
chr.Humanoid.Jump=true
end

if anim=="Crouching" then
if not armmovement then
rarm.Weld.C0=Lerp(rarm.Weld.C0, CFrame.new(1.4, .35, -.225) * CFrame.Angles(math.rad(70), 0, math.rad(-15)), 0.075)
larm.Weld.C0 = Lerp(larm.Weld.C0, CFrame.new(-1.4, .35, -.225) * CFrame.Angles(math.rad(70), 0, math.rad(15)), 0.075)
end
lleg.Weld.C0 = Lerp(lleg.Weld.C0, CFrame.new(-.5, -.55, -1) * CFrame.Angles(math.rad(40), 0, math.rad(0)), 0.075)
rleg.Weld.C0 = Lerp(rleg.Weld.C0, CFrame.new(.5, -.65, -1.275) * CFrame.Angles(math.rad(60), 0, math.rad(-0)), 0.075)
hed.Weld.C0=Lerp(hed.Weld.C0,CFrame.new(0,1.5,0)*CFrame.Angles(math.rad(5),0,0),.05)
rutprt.Weld.C0=Lerp(rutprt.Weld.C0,CFrame.new(0,-2,0)*CFrame.Angles(math.rad(-5),math.rad(0),math.rad(0)),0.075)
end

if anim=="PreCrawl" then
if not armmovement then
rarm.Weld.C0=Lerp(rarm.Weld.C0, CFrame.new(1.45, .75, -.15)* CFrame.Angles(math.rad(140), 0, math.rad(-25)), 0.15)
larm.Weld.C0 = Lerp(larm.Weld.C0, CFrame.new(-1.45, .75, -.15) * CFrame.Angles(math.rad(140), 0, math.rad(25)), 0.15)
end
lleg.Weld.C0 = Lerp(lleg.Weld.C0, CFrame.new(-.5, -1.6, -.1) * CFrame.Angles(math.rad(-5), 0, math.rad(0)), 0.15)
rleg.Weld.C0 = Lerp(rleg.Weld.C0, CFrame.new(.5, -1.6, -.1) * CFrame.Angles(math.rad(-5), 0, math.rad(-0)), 0.15)
hed.Weld.C0=Lerp(hed.Weld.C0,CFrame.new(0,1.35,.25)*CFrame.Angles(math.rad(72.5),0,0),.15)
rutprt.Weld.C0=Lerp(rutprt.Weld.C0,CFrame.new(0,-2.2,0)*CFrame.Angles(math.rad(-80),math.rad(0),math.rad(0)),0.15)
end

if crawling then



if anim=='Crawling' then
chr.Humanoid.WalkSpeed=CrawlSpeed-math.cos(syne/5)*5
if not armmovement then
rarm.Weld.C0=Lerp(rarm.Weld.C0, CFrame.new(1.25, 1-math.cos(syne/10)/2, -.35+math.cos(syne/10)/8) * CFrame.Angles(math.rad(155)+math.sin(syne/10)/9, 0, math.rad(-25)+math.cos(syne/10)/13),.175)
larm.Weld.C0 = Lerp(larm.Weld.C0, CFrame.new(-1.25, 1+math.cos(syne/10)/2, -.35-math.cos(syne/10)/8) * CFrame.Angles(math.rad(155)-math.sin(syne/10)/9, 0, math.rad(25)-math.cos(syne/10)/13), .175)
end
lleg.Weld.C0 = Lerp(lleg.Weld.C0, CFrame.new(-.525, -1.5-math.cos(syne/10)/3, -.3+math.cos(syne/10)/10) * CFrame.Angles(math.rad(-5)-math.cos(syne/10)/9, 0, math.rad(0)-math.cos(syne/10)/15), .175)
rleg.Weld.C0 = Lerp(rleg.Weld.C0, CFrame.new(.525, -1.5+math.cos(syne/10)/3, -.3-math.cos(syne/10)/10) * CFrame.Angles(math.rad(-5)+math.cos(syne/10)/9, 0, math.rad(-0)-math.cos(syne/10)/15), 0.175)
hed.Weld.C0=Lerp(hed.Weld.C0,CFrame.new(0,1.35,math.cos(syne/30)/20+.25)*CFrame.Angles(math.cos(syne/30)/25+math.rad(75),math.rad(4),0),.175)
rutprt.Weld.C0=Lerp(rutprt.Weld.C0,CFrame.new(0,-2.2,0)*CFrame.Angles(math.rad(-82)+math.cos(syne/5)/12,math.cos(syne/10)/15,math.cos(syne/5)/15),0.15)
end

if anim=='SpeedCrawling' then
if not armmovement then
rarm.Weld.C0=Lerp(rarm.Weld.C0, CFrame.new(1.25, 1-math.cos(syne/5)/2, -.35+math.cos(syne/5)/12) * CFrame.Angles(math.rad(155)-math.cos(syne/5)/14, 0, math.rad(-25)+math.cos(syne/5)/13),.175)
larm.Weld.C0 = Lerp(larm.Weld.C0, CFrame.new(-1.25, 1+math.cos(syne/5)/2, -.35-math.cos(syne/5)/12) * CFrame.Angles(math.rad(155)+math.cos(syne/5)/14, 0, math.rad(25)-math.cos(syne/5)/13), .175)
end
lleg.Weld.C0 = Lerp(lleg.Weld.C0, CFrame.new(-.525, -1.5-math.cos(syne/5)/3, -.3+math.cos(syne/5)/10) * CFrame.Angles(math.rad(-5)-math.cos(syne/5)/9, 0, math.rad(0)-math.cos(syne/5)/15), .175)
rleg.Weld.C0 = Lerp(rleg.Weld.C0, CFrame.new(.525, -1.5+math.cos(syne/5)/3, -.3-math.cos(syne/5)/10) * CFrame.Angles(math.rad(-5)+math.cos(syne/5)/9, 0, math.rad(-0)-math.cos(syne/5)/15), 0.175)
hed.Weld.C0=Lerp(hed.Weld.C0,CFrame.new(0,1.35,math.cos(syne/15)/20+.25)*CFrame.Angles(math.cos(syne/15)/25+math.rad(75),math.rad(4),0),.175)
rutprt.Weld.C0=Lerp(rutprt.Weld.C0,CFrame.new(0,-2.2,0)*CFrame.Angles(math.rad(-82)+math.cos(syne/2.5)/12,math.cos(syne/5)/15,math.cos(syne/2.5)/15),0.15)
end
end

if crouching then chr.Humanoid.WalkSpeed=0 end

chr.Humanoid.CameraOffset=(rutprt.CFrame:toObjectSpace(hed.CFrame)).p+Vector3.new(0,-1.25,0)

if runnin and not disabled and not otheranims and not sitting then
chr.Humanoid.WalkSpeed=RunSpeed
elseif not runnin and not disabled and not otheranims and not sitting then
chr.Humanoid.WalkSpeed=WlkSpeed
elseif not runnin and not disabled and otheranims and crawling and not crawldash and not sitting then
chr.Humanoid.WalkSpeed=CrawlSpeed
elseif not runnin and not disabled and otheranims and crawling and crawldash and not sitting then
chr.Humanoid.WalkSpeed=CrawlDashSpeed
end
end)

local hp=Instance.new("HopperBin",plr.Backpack)
hp.Name="Neko Neko Knuckles"
hp.Selected:connect(function()
equipped=true
end)
hp.Deselected:connect(function()
equipped=false
end)
